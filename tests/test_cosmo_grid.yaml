grid:
#  yaml_dir:  # where to look for the INI files: default and of each dataset
#  defaults:  # YAML file with "base" model (params + theory + sampler, +(maybe) common likelihoods)
#  importance_defaults: # defaults of importance runs?
  groups:
    main:
      models:  # was `params`
        - camb_LCDM
        - classy_LCDM
        - camb_mnu
        - classy_mnu
        - camb_nnu
        - classy_nnu
        - camb_r
        - classy_r
#        - mnu_nnu
#        meffsterile: {'param[mnu]': '0.06', 'param[nnu]': '3.1 3.046 10 0.05 0.05', 'num_massive_neutrinos': 1,
#                    'accuracy_level': 1.2},
      # NB: datasets infos are added *after* models info, so the former overwrite the latter in case of conflict.
      datasets:
        - planckT
        - planckP
        - planckL
        - planckLalt
        - bkp
        - planckP_BAO
        - planckP_H
        - planckP_sn
#      importance_runs:
#        [['BAO'], ['BAO.ini']]
  # Definitions of the models used
  models:
    camb_LCDM:
      theory: &camb
        camb:
      params: &camb_params
        cosmomc_theta: "lambda cosmomc_theta_100: 1.e-2*cosmomc_theta_100"
        cosmomc_theta_100:
          prior:
            min: 0.5
            max: 10
          ref:
            dist: norm
            loc: 1.0411
            scale: 0.0004
            proposal: 0.0002
          latex: 100\theta_\mathrm{MC}
          drop:
    classy_LCDM:
      theory: &classy
        classy:
          use_camb_names: True
          extra_args:
            N_ncdm: 1
            m_ncdm: 0.06
            T_ncdm: 0.71611
            N_ur: 2.0328
      params: &classy_params
        100*theta_s: 'lambda theta_s_100: theta_s_100'
        theta_s_100:
          prior:
            min: 0.5
            max: 10
          ref:
            dist: norm
            loc: 1.0418
            scale: 0.0004
          proposal: 0.0002
          latex: 100*\theta_s
          drop:
    camb_mnu:
      theory: *camb
      params:
        <<: *camb_params
        mnu: &mnu_info
          prior:
            min: 0
            max: 5
          ref:
            dist: norm
            loc: 0.02
            scale: 0.1
          proposal: 0.03
    classy_mnu:
      theory: *classy
      params:
        <<: *classy_params
        mnu: *mnu_info
    camb_nnu:
      theory: *camb
      params:
        <<: *camb_params
        nnu: &nnu_info
          prior:
            min: 0.05
            max: 10
          ref:
            dist: norm
            loc: 3.046
            scale: 0.05
          proposal: 0.05
    classy_mnu:
      theory: *classy
      params:
        <<: *classy_params
        mnu: *nnu_info
    camb_r:
      theory: *camb
      params:
        <<: *camb_params
        r: &r_info
          prior:
            min: 0
            max: 3
          ref:
            dist: norm
            loc: 0
            scale: 0.03
          proposal: 0.03
    classy_r:
      theory: *classy
      params:
        <<: *classy_params
        r: *r_info
  # Definitions of datasets used
  datasets:
    planckT:
      likelihood:
        planck_2015_plikHM_TT:
        planck_2015_lowTEB:
          speed: 0.25
    planckP:
      likelihood: &planckP
        planck_2015_plikHM_TT:
        planck_2015_lowl:
          speed: 0.5
    planckL:
      likelihood:
        <<: *planckP
        planck_2015_lensing:
    planckLalt:
      likelihood:
        <<: *planckP
        planck_2015_lensing_cmblikes:
    bkp:
      likelihood:
        <<: *planckP
        bicep_keck_2015:
    planckP_BAO:
      likelihood:
        <<: *planckP
        sdss_dr12_consensus_final:
    planckP_H:
      likelihood:
        <<: *planckP
        hst_riess2018:
    planckP_sn:
      likelihood:
        <<: *planckP
        sn_pantheon:


        
#cov
#    dir:  # where to look for covariance matrices
    # try to match each new run name to exisitng covmat (covariance matrix for efficient exploration)
    # e.g. try to map to get name without particular data combinations
    ##covWithoutNameOrder = ['lensing', 'BAO']
    # or try replacing various names (these are standard for the provided planck_covmats)
    ##covNameMappings = {'plikHM': 'plik', 'plikLite': 'plik'}
    # for mapping to nominal mission names try
    # covNameMappings = {'plikHM':'planck','TT':'', 'lowTEB':'lowLike'}


# ADD TO CAMB!?
### extra parameters that are set only when specific parameters are varied. Can deleted to get defaults.
###param_extra_opts = {
###    'mnu': {'num_massive_neutrinos': 3},
###    'yhe': {'bbn_consistency': False},
###    'r': {'compute_tensors': True},
###    'nt': {'inflation_consistency': False, 'lmax_tensor': 1000}
###}


# Below this line, defaults ###################################################

sampler:
  polychord:
    nlive: 500
#  mcmc:
#    burn_in: 100
#    learn_proposal: True
#    learn_proposal_Rminus1_max: 3.
#    learn_proposal_Rminus1_max_early: 50.
#    learn_proposal_Rminus1_min: 0.
#    Rminus1_stop: 0.01
#    Rminus1_cl_stop: 0.2
#    Rminus1_cl_level: 0.95
#    drag_interp_steps: 3
#    max_speed_slow: 0.5

params:
  ombh2:
    prior:
      min: 0.005
      max: 0.1
    ref:
      dist: norm
      loc: 0.0221
      scale: 0.0001
    proposal: 0.0001
    latex: \Omega_\mathrm{b} h^2
  omch2:
    prior:
      min: 0.001
      max: 0.99
    ref:
      dist: norm
      loc: 0.12
      scale: 0.001
    proposal: 0.0005
    latex: \Omega_\mathrm{c} h^2
  tau:
    prior:
      min: 0.01
      max: 0.8
    ref:
      dist: norm
      loc: 0.09
      scale: 0.01
    proposal: 0.005
    latex: \tau_\mathrm{reio}
  logAs1e10:
    prior:
      min: 2
      max: 4
    ref:
      dist: norm
      loc:   3.1
      scale: 0.001
    proposal: 0.001
    latex: \log(10^{10} A_s)
    drop:
  As: "lambda logAs1e10: 1e-10*np.exp(logAs1e10)"
  ns:
    prior:
      min: 0.8
      max: 1.2
    ref:
      dist: norm
      loc: 0.96
      scale: 0.004
    proposal: 0.002
    latex: n_\mathrm{s}
  # Derived #####################
  H0:
    latex: H_0
  omegav:
    latex: \Omega_\Lambda
  omegam:
    derived: "lambda omegab, omegac, omegan: omegab+omegac+omegan"
    latex: \Omega_m
  omegamh2:
    derived: "lambda omegab, omegac, omegan, H0: (omegab+omegac+omegan)*(H0/100)**2"
    latex: \Omega_m h^2
  omegamh3:
    derived: "lambda omegab, omegac, omegan, H0: (omegab+omegac+omegan)*(H0/100)**3"
    latex: \Omega_m h^3
  sigma8:
    latex: \sigma_8
  s8h5:
    derived: "lambda sigma8, H0: sigma8*(H0*1e-2)**(-0.5)"
    latex: \sigma_8/h^{0.5}
  s8omegamp5:
    derived: "lambda sigma8, omegab, omegac, omegan: sigma8*(omegab+omegac+omegan)**0.5"
    latex: \sigma_8 \Omega_m^{0.5}
  s8omegamp25:
    derived: "lambda sigma8, omegab, omegac, omegan: sigma8*(omegab+omegac+omegan)**0.25"
    latex: \sigma_8 \Omega_m^{0.25}
  zre:
    latex: z_\mathrm{re}
  As1e9:
    derived: "lambda As: 1e9*As"
    latex: 10^9 A_s
  clamp:
    derived: "lambda As, tau: 1e9*As*np.exp(-2*tau)"
    latex: 10^9 A_s e^{-2\tau}
  age:
    latex: \mathrm{Age}/\mathrm{Gyr}
  rdrag:
    latex: r_\mathrm{drag}
